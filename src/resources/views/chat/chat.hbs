<body>
    <input type="hidden" value="{{receiver_id._id}}" id="receiver_id">
    <input type="hidden" id="sender_id" value="{{sender._id}}">
    <input type="hidden" id="name-sender" class="name-input" value="{{sender.name}}">

    <div class="main">
        <div class="name">
            <a href="/profile/information/{{receiver_id._id}}" style="text-decoration: none;"><img
                    src="../../../uploads/{{receiver_id.avatar}}" alt="avatar of {{receiver_id.name}}"
                    id="avartarChat"></a>
            <input type="text" id="name-input" class="name-input" value="{{receiver_id.name}}" maxlength="20">
            {{#if onlineUser}}
            <h6 class="name-input" style="color: rgb(12, 206, 54);">Online</h6>
            {{else}}
            <h6 class="name-input">Offline</h6>

            {{/if}}


        </div>
        <ul class="message-container" id="message-container">

            {{#each messages}}
            <li class="{{#if isOwnMessage}}message-right{{else}}message-left{{/if}}">
                {{#if file}}
                <p class="message">{{this.message}}<span>{{this.timestamp}}</span></p>
                {{else if fileDocx}}
                <p class="message">
                    <a href="../../..{{this.filePath}}" target="_blank">{{this.fileName}}</a>
                    <span>{{this.timestamp}}</span>
                </p>
                {{else}}
                <p class="message">
                    <img src="../../..{{this.filePath}}" alt="" id="img-send">
                    <span>{{this.timestamp}}</span>
                </p>
                {{/if}}
            </li>
            {{/each}}

        </ul>
        <form action="" class="message-form" id="message-form">

            <img src="../../../uploads/{{sender.avatar}}" alt="avatar" style="width: 40px; height: 40px;" id="avt">



            <input type="text" name="message" id="message-input" class="message-input">
            <div class="v-divider"></div>
            <input type="file" id="file-input" class="file-input form-control">
            <div class="v-divider"></div>

            <button type="submit" class="send-button">
                <a class="ms-3" href="#!"><i class="fas fa-paper-plane"></i></a> <span></span>
            </button>
        </form>
    </div>

    </div>
    <br>
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js" crossorigin="anonymous"
        referrerpolicy="no-referrer"></script>
    <script>

        const socket = io();
        const receiverId = document.getElementById('receiver_id').value;
        const senderId = document.getElementById('sender_id').value;

        const clientsTotal = document.getElementById('client-total');
        const messageContainer = document.getElementById('message-container');
        const nameSender = document.getElementById('name-sender');
        const messageForm = document.getElementById('message-form');
        const messageInput = document.getElementById('message-input');
        const fileInput = document.getElementById('file-input');
        scrollBottom();


        socket.emit('chat', senderId);

        messageForm.addEventListener('submit', (e) => {
            e.preventDefault();
            if (!isValidMessage()) {
                alert('Please enter a message or select a file to send.');
                return;
            }
            const file = fileInput.files[0];

            if (file) {
                sendFile(); // Nếu có file thì gửi file
            } else {
                sendMessage(); // Nếu không có file thì gửi tin nhắn
            }
        });
        // socket.on('clients-total', (data) => {

        // clientsTotal.innerText = `Online Client Total: ${data}`

        // })
        function isValidMessage() {
            // Kiểm tra nếu người dùng chưa nhập nội dung tin nhắn và không chọn file
            return messageInput.value !== '' || fileInput.files.length > 0;
        }

        function sendMessage() {
            const data = {
                name: nameSender.value,
                message: messageInput.value,
                receiver_id: receiverId,
                sender_id: senderId,

            }
            socket.emit('message', data)
            addMessageToUI(true, data);
            messageInput.value = '';


        }
        function sendFile() {
            const file = fileInput.files[0];
            const formData = new FormData();
            formData.append('file', file);
            formData.append('name', nameSender.value);
            formData.append('receiver_id', receiverId);
            formData.append('sender_id', senderId);

            fetch('/chat/upload', {
                method: 'POST',
                body: formData,
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    if (data.filePath) {
                        const fileExtension = data.filePath.split('.').pop().toLowerCase();
                        let messageContent;

                        // Kiểm tra phần mở rộng của tệp tin
                        if (fileExtension === 'docx') {
                            // Nếu tệp tin là DOCX, tạo thông điệp với liên kết tải xuống
                            messageContent = `<a href="${data.filePath}" id="file-send" download>${data.fileName}</a>`;
                        } else {
                            // Nếu tệp tin là hình ảnh, tạo thông điệp với hình ảnh
                            messageContent = `<img src="${data.filePath}" id="img-send">`;
                        }

                        const messageData = {
                            name: nameSender.value,
                            message: messageContent,
                            receiver_id: receiverId,
                            sender_id: senderId
                        };
                        socket.emit('message', messageData);
                        addMessageToUI(true, messageData);
                         
                    }
                })
                .catch(err => console.error(err));

            fileInput.value = ''; // Reset file input
        }



        socket.on('receiveMessage', (data) => { // nhan tin nhan tu nguoi dung khac


            if (data.receiver_id === senderId && data.sender_id === receiverId) {

                addMessageToUI(false, data)

            }
            else {
                console.log('k dc nhan tin nhan:', data.receiver_id)
            }
        })

        function addMessageToUI(isOwnMessage, data) {
            const messageHTML = isOwnMessage ?
                `<li class="message-right">
            <p class="message">${data.message}</p>
            <span>${data.name} : ${moment(data.dateTime).fromNow()}</span>
        </li>` :
                `<li class="message-left">
            <p class="message">${data.message}</p>
            <span>${data.name} : ${moment(data.dateTime).fromNow()}</span>
        </li>`;

            messageContainer.innerHTML += messageHTML;
            scrollBottom();
        }


        function scrollBottom() {
            messageContainer.scrollTo(0, messageContainer.scrollHeight)
        }


    </script>
</body>